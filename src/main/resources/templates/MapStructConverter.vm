package ${package};

#if(${do})
import ${do};
#end
#if(${dto})
import ${dto};
#end
#if(${vo})
import ${vo};
#end
#if(${clone})
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
#end
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;
import org.mapstruct.NullValuePropertyMappingStrategy;

/**
* @author Losisco
*
*/
@Mapper(nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE)
public interface ${className} {
    ${className} INSTANCE = Mappers.getMapper( ${className}.class );

#if(${dtoName} && ${doName})
    ${dtoName} do2dto(${doName} doObj);
#end

#if(${doName} && ${dtoName})
    ${doName} dto2do(${dtoName} dtoObj);
#end

#if(${dtoName} && ${voName})
    ${dtoName} vo2dto(${voName} voObj);
#end

#if(${voName} && ${dtoName})
    ${voName} dto2vo(${dtoName} dtoObj);
#end

#if(${voName} && ${doName})
    ${voName} do2vo(${doName} doObj);
#end

#if(${doName} && ${voName})
    ${doName} vo2do(${voName} voObj);
#end

#if(${clone})
#if(${doName})
    default ${doName} clone(${doName} target, Object source) {
        JSONObject tar = JSON.parseObject(JSON.toJSONString(target));
        JSONObject src = JSON.parseObject(JSON.toJSONString(source));
        tar.putAll(src);
        return JSON.parseObject(JSON.toJSONString(tar),${doName}.class);
    }
#end

#if(${dtoName})
    default ${dtoName} clone(${dtoName} target, Object source) {
        JSONObject tar = JSON.parseObject(JSON.toJSONString(target));
        JSONObject src = JSON.parseObject(JSON.toJSONString(source));
        tar.putAll(src);
        return JSON.parseObject(JSON.toJSONString(tar),${dtoName}.class);
    }
#end

#if(${voName})
    default ${voName} clone(${voName} target, Object source) {
        JSONObject tar = JSON.parseObject(JSON.toJSONString(target));
        JSONObject src = JSON.parseObject(JSON.toJSONString(source));
        tar.putAll(src);
        return JSON.parseObject(JSON.toJSONString(tar),${voName}.class);
    }
#end
#end
}